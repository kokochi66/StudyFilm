<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
       
	<!-- @Autowired, @Resource 같은 어노테이션을 이용할 수 있도록 태그를 등록한다. -->
	<context:annotation-config />

	<tx:annotation-driven />
	<!-- 스프링 데이터 JPA 모듈이 리파지토리 인터페이스를 찾아서 알맞은 빈 객체를 생성하도록 태그를 추가해준다.
	chap14.domain. 및 그 하위 패키지에서 리파지토리 인터페이스를 상속받은 인터페이스를 찾아서 리파지터리 구현 빈 객체를 생성한다. -->
	<jpa:repositories base-package="net.madvirus.spring4.chap14.domain"
		factory-class="net.madvirus.spring4.chap14.common.CustomRepositoryFactoryBean">
	</jpa:repositories>

	<bean id="updateEmployeeService"
		class="net.madvirus.spring4.chap14.application.UpdateEmployeeServiceImpl">
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost/hrdb?characterEncoding=utf8" />
		<property name="user" value="spring4" />
		<property name="password" value="spring4" />
	</bean>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL" />
		<property name="showSql" value="true" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="packagesToScan">
			<list>
				<value>net.madvirus.spring4.chap14.domain</value>
			</list>
		</property>
		<!-- <property name="jpaProperties"> -->
		<!-- <value> -->
		<!-- hibernate.format_sql = true -->
		<!-- </value> -->
		<!-- </property> -->
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="jpaEmployeeListService"
		class="net.madvirus.spring4.chap14.application.JpaEmployeeListService">
	</bean>
	
	<bean id="specEmployeeListService"
		class="net.madvirus.spring4.chap14.application.SpecEmployeeListService">
	</bean>

	<bean id="updateTeamService"
		class="net.madvirus.spring4.chap14.application.UpdateTeamServiceImpl">
	</bean>
</beans>