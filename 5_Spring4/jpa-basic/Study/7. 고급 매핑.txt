고급 매핑

- 상속관계 매핑
관계형 데이터베이스에는 상속관계가 존재하지 않는다.
슈퍼타입 서브타입 고나계라는 모델링 기법이 객체 상속과 유사하다.

Jpa는 다음 세가지 매핑 방법을 모두 지원한다
- 각각 테이블로 변환(조인 전략)
- 통합 테이블로 변환(단일 테이블 전략)
- 서브타입 테이블로 변환(구현 클래스마다 테이블)

주요 어노테이션
@Inheritance(starategy=InheritanceType.XXX) [ JOINED(조인전략), SINGLE_TALBLE(단일테이블전략), TABLE_PER_CLASS (구현클래스마다 테이블 전략) ]
@DiscriminatorColumn(name="DTYPE")
@DiscriminatorValue("XXX")


조인 전략 : 제약조건을 걸기도 유용하고, 테이블이 정규화되어있으며, 저장공간을 효율적으로 쓸 수 있다.
단점은 조회 쿼리가 복잡하고, 조인을 많이 사용해야한다. (조인을 어떻게 맞추느냐를 신경을 써줘야한다)

단일 테이블 전략 : 테이블 하나에 다 때려박고, DTYPE으로 구분하는 전략
조인을 치지 않기 때문에 성능면에서 가장 뛰어나며, 조회가 단순하다.
자식 엔티티가 매핑한 컬럼을 모두 null 허용해주어야 하며, 저장공간이 많이 필요해지고, 상황에 따라서 조회가 더 느려질 수 있다.

구현 클래스마다 테이블 전략 : 모든 객체를 각각 테이블로 모두 나눈다.
단순하게 값을 넣고 뺄때에는 유용하다.
그러나 값을 select 할 때에, 상위객체로 찾게되면, 상위 객체와 연관된 모든 객체를 union으로 다 찾아서 조회 성능이 매우 느리다.


@MappedSuperclass :: 공통 매핑정보가 필요할떄 사용한다.
테이블과 관계가 없으며, 등록일/수정일 과 같이 전체 엔티티에서 공통으로 사용하는 변수가 필요한 경우에 사용한다.

