<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="org.hdcd.controller" />
	
	<!-- LoginInterceptor 자바 빈을 xml상에 등록해주고, 해당 경로를 사용한다. -->
	<beans:bean id="loginInterceptor" class="org.hdcd.common.interceptor.LoginInterceptor"></beans:bean>
	<!-- 컨트롤러에 접근하는 로그를 저장하는 인터셉터를 정의한다. -->
	<beans:bean id="accessLogginInterceptor" class="org.hdcd.common.interceptor.AccessLoggingInterceptor"></beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/login" />
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<beans:ref bean="accessLogginInterceptor"/>
		</interceptor>
	</interceptors>

</beans:beans>
